name: MacOS SSH

on:
  workflow_dispatch:

jobs:
  ssh:
    runs-on: macos-10.15

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Creating Case-sensitive SPARSE filesystem
      run: sudo hdiutil create -type SPARSE -fs 'Case-sensitive Journaled HFS+' -size 500g ~/android.dmg.sparseimage
      run: sudo hdiutil attach ~/android.dmg.sparseimage -mountpoint /Volumes/android
      run: rm -f /Applications/Xcode.app 2>/dev/null
      run: sudo xcode-select -s /Applications/Xcode_12.3.app/Contents/Developer
      run: ln -s /Applications/Xcode_12.3.app /Applications/Xcode.app
      run: cd /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs
    - name: SSH Keepalive Hack
      run: |
        mkdir -p ~/.ssh
        cat << EOF > ~/.ssh/config
        Host *
            ServerAliveInterval 60
            StrictHostKeyChecking no
        Host github.com
            User git
            Port 22
            Hostname github.com
            TCPKeepAlive yes
            IdentitiesOnly yes
        EOF
    - name: Start SSH via ngrok
      continue-on-error: true
      timeout-minutes: 350
      uses: P3TERX/ssh2actions@main
      with:
        mode: ngrok
      env:
        # You can find this token here: https://dashboard.ngrok.com/auth/your-authtoken
        NGROK_TOKEN: ${{ secrets.NGROK_TOKEN }}
        # ngrok server region [us, eu, au, ap, sa, jp, in] (optional, default: us)
        NGROK_REGION: us
        # This password you will use when authorizing via SSH
        SSH_PASSWORD: ${{ secrets.SSH_PASSWORD }}
        # Send connection info to Telegram (optional)
        #TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        #TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
